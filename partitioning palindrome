https://leetcode.com/problems/palindrome-partitioning/submissions/1188869432

class Solution {
    public static void pp(String s,int ind,List<List<String>> ans,List<String> ds)
    {
        if(ind==s.length())
        {
            ans.add(new ArrayList<String>(ds));
            return;
        }
        for(int i=ind;i<s.length();i++)
        {
            if(pali(s,ind,i))
            {
                ds.add(s.substring(ind,i+1));
                pp(s,i+1,ans,ds);
                ds.remove(ds.size()-1);
            }
        }
    }
    public static boolean pali(String s,int start,int end)
    {
        while(start<=end)
        {
            if(!(s.charAt(start++)==s.charAt(end--)))
            return false;
        }
        return true;
    }
    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        pp(s,0,ans,new ArrayList<>());
        return ans;
    }
}
