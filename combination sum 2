https://leetcode.com/problems/combination-sum-ii/submissions/1185054740

class Solution {
    public static void cs(int ind,int sum,List<List<Integer>> ans,int[] can,List<Integer> ds)
    {
            if(sum==0)
            {
                ans.add(new ArrayList<Integer>(ds));
                return;
            }
        
        for(int i=ind;i<can.length;i++)
        {
            if(i>ind && can[i]==can[i-1])
            continue;
            if(sum>=can[i])
            {
            ds.add(can[i]);
            cs(i+1,sum-can[i],ans,can,ds);
            ds.remove(ds.size()-1);
            }
        }
    }
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans= new ArrayList<>();
        Arrays.sort(candidates);
        cs(0,target,ans,candidates,new ArrayList<>());
        return ans;
    }
}
